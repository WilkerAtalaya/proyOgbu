"""fecha de solicitud

Revision ID: 1102fff7bdce
Revises: 684d321e8401
Create Date: 2025-08-16 18:39:31.355983

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1102fff7bdce'
down_revision = '684d321e8401'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reservas_area_comun', schema=None) as batch_op:
        batch_op.alter_column('motivo',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.Text(),
               existing_nullable=True)
        batch_op.alter_column('Fecha_solicitada',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)

    with op.batch_alter_table('salidas_vivienda', schema=None) as batch_op:
        batch_op.alter_column('Fecha_solicitada',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('salidas_vivienda', schema=None) as batch_op:
        batch_op.alter_column('Fecha_solicitada',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)

    with op.batch_alter_table('reservas_area_comun', schema=None) as batch_op:
        batch_op.alter_column('Fecha_solicitada',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
        batch_op.alter_column('motivo',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)

    # ### end Alembic commands ###
